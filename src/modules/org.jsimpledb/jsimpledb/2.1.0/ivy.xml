<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2015 Archie L. Cobbs

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->

<ivy-module>

    <info publication="20160625000000">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <description homepage="https://github.com/archiecobbs/jsimpledb/">

        <p>
        <b>JSimpleDB is a better persistence layer for Java</b>
        </p>

        <p>
        Mainstream persistence solutions such as JPA and JDO fail to address many important issues that are inherent to persistence programming.  This is because they were not designed to address these issues; they were designed merely to give Java programmers access to existing database functionality.
        </p>

        <p>
        In particular:
        </p>

        <ul>
            <li><b>Configuration complexity</b> Do we have to explicitly configure how data is mapped? Are we forced to (ab)use the programming language to address what are really database configuration issues?</li>
            <li><b>Query language concordance</b> Does the code that performs queries look like regular Java code, or do we have to learn a new “query language”?</li>
            <li><b>Query performance transparency</b> Is the performance of a query obvious from looking at the code that performs it?</li>
            <li><b>Data type congruence</b> Do database types agree with Java types? Are all field values supported? Do we always read back the same values we write?</li>
            <li><b>First class offline data</b> Can it be precisely defined which data is actually copied out of a transaction? Does offline data have all the rights and privileges of “online” (i.e., transactional) data? Does this include index queries and a framework for handling schema differences?</li>
            <li><b>Schema verification</b> Is the schema assumed by the code cross-checked against the schema actually present in the database?</li>
            <li><b>Incremental schema evolution</b> Can multiple schemas exist at the same time in the database, to support rolling upgrades? Can data be migrated incrementally, i.e., without stopping the world? Are any whole database operations ever required?</li>
            <li><b>Structural schema changes</b> Are structural schema updates performed automatically?</li>
            <li><b>Semantic schema changes</b> Is there a convenient way to specify semantic schema updates, preferably at the Java level, not the database level? Do semantic updates have access to both the old and the new values?</li>
            <li><b>Schema evolution type safety</b> Is type safety and data type congruence guaranteed across arbitrary schema migrations?</li>
            <li><b>Transactional validation</b> Does validation only occur at the end of the transaction, or randomly and inconveniently in the middle?</li>
            <li><b>Cross-object validation</b> Is it possible to define validation constraints that span multiple objects/records?</li>
            <li><b>Language-level data maintainability</b> Can data maintenance tasks be performed using the normal Java types and values? Are there convenient tools for manual and scripted use?</li>
        </ul>

        <p>
        JSimpleDB addresses all of these issues, this without sacrificing flexibility or scalability.
        </p>

        <p>
        JSimpleDB does this by treating the database as just a sorted key/value store, and implementing the following in Java:
        </p>

        <ul>
            <li>Encoding/decoding of field values</li>
            <li>Enforcing referential integrity; forward/reverse delete cascades</li>
            <li>Field indexes (simple and composite)</li>
            <li>Query views</li>
            <li>Schema management</li>
            <li>Change notification</li>
            <li>Validation queues</li>
            <li>Command line interface</li>
        </ul>

        <p>
        JSimpleDB also adds some new features that traditional databases don't provide.
        </p>

        <ul>
        <li>Designed from the ground up to be Java-centric; 100% type-safe at all times.</li>
        <li>Works on top of any database that can function as a key/value store (SQL, NoSQL, etc.)</li>
        <li>Scales gracefully to large data sets; no "whole database" operation is ever required</li>
        <li>Configured entirely via Java annotations (only one is required)</li>
        <li>Queries are regular Java code - there is no "query language" needed</li>
        <li>Change notifications from arbitrarily distant objects</li>
        <li>Built-in support for rolling schema changes across multiple nodes with no downtime</li>
        <li>Supports simple and composite indexes, including on user-defined custom types</li>
        <li>Extensible command line interface (CLI) including Java 8 expression parser</li>
        <li>Built-in Java-aware graphical user interface (GUI) based on Vaadin</li>
        </ul>

        </description>
    </info>

    <configurations>
        <conf name="ant" extends="main,kv,coreapi,spring" description="Ant tasks for use with JSimpleDB."/>
        <conf name="app" extends="main,coreapi,spring,kv,util" description="JSimpleDB classes supporting command line applications that utilize JSimpleDB."/>
        <conf name="cli-telnet" extends="main,coreapi,cli,kv" description="Telnet server for the JSimpleDB Command Line Interface (CLI)."/>
        <conf name="cli" extends="main,coreapi,parse,kv,kv-raft,util" description="JSimpleDB classes supporting command line interfaces."/>
        <conf name="cliapp" extends="app,main,cli,coreapi,parse,spring" description="JSimpleDB Command Line Interface (CLI) executable application."/>
        <conf name="coreapi" extends="kv,util" description="JSimpleDB core API classes which provide objects, fields, indexes, queries, and schema management on top of a key/value store."/>
        <conf name="demo" extends="main,vaadin,cliapp,guiapp,util" description="JSimpleDB demonstration classes."/>
        <conf name="guiapp" extends="app,main,coreapi,parse,spring,vaadin" description="JSimpleDB Graphical User Interface (GUI) executable application."/>
        <conf name="kv-array" extends="kv,util" description="JSimpleDB &quot;array&quot; key/value store implementations."/>
        <conf name="kv-bdb" extends="kv,util" description="JSimpleDB key/value store implementation based on Berkeley DB Java Edition."/>
        <conf name="kv-cockroach" extends="kv,kv-sql" description="JSimpleDB key/value store implementation based on CockroachDB."/>
        <conf name="kv-fdb" extends="kv,util" description="JSimpleDB key/value store implementation based on FoundationDB."/>
        <conf name="kv-leveldb" extends="kv,util" description="JSimpleDB key/value store implementation based on LevelDB."/>
        <conf name="kv-mysql" extends="kv,kv-sql" description="JSimpleDB key/value store implementation based on MySQL."/>
        <conf name="kv-raft" extends="kv,util" description="JSimpleDB distributed, linearizable ACID compliant key/value store implementation based on the Raft consensus algorithm."/>
        <conf name="kv-rocksdb" extends="kv,util" description="JSimpleDB key/value store implementation based on RocksDB."/>
        <conf name="kv-simple" extends="kv,util" description="A couple of simplistic JSimpleDB key/value store implementations."/>
        <conf name="kv-sql" extends="kv,util" description="Support for JSimpleDB key/value store implementation based on SQL databases."/>
        <conf name="kv-sqlite" extends="kv,kv-sql" description="JSimpleDB key/value store implementation based on SQLite."/>
        <conf name="kv-test" extends="kv,util" description="JSimpleDB unit test classes for key/value store implementations."/>
        <conf name="kv" extends="util" description="JSimpleDB classes relating to the key/value store API."/>
        <conf name="main" extends="coreapi,kv,kv-simple,util" description="JSimpleDB classes that map Java model classes onto the core API."/>
        <conf name="parse" extends="main,coreapi,kv,kv-simple,util" description="JSimpleDB classes for parsing Java expressions."/>
        <conf name="spring" extends="main,coreapi,kv,kv-raft" description="JSimpleDB classes for the Spring Framework."/>
        <conf name="test" description="JSimpleDB unit test support classes."/>
        <conf name="util" description="Common utility classes used by JSimpleDB."/>
        <conf name="vaadin" extends="main,coreapi,parse,kv,spring,util" description="JSimpleDB classes supporting Vaadin applications."/>
        <conf name="default" extends="main" description="JSimpleDB with simple key/value store classes"/>
    </configurations>

    <publications>

        <!-- JARs -->
        <artifact name="jsimpledb-ant" conf="ant"/>
        <artifact name="jsimpledb-app" conf="app"/>
        <artifact name="jsimpledb-cli" conf="cli"/>
        <artifact name="jsimpledb-cli-telnet" conf="cli-telnet"/>
        <artifact name="jsimpledb-cliapp" conf="cliapp"/>
        <artifact name="jsimpledb-coreapi" conf="coreapi"/>
        <artifact name="jsimpledb-demo" conf="demo"/>
        <artifact name="jsimpledb-guiapp" conf="guiapp"/>
        <artifact name="jsimpledb-kv" conf="kv"/>
        <artifact name="jsimpledb-kv-array" conf="kv-array"/>
        <artifact name="jsimpledb-kv-bdb" conf="kv-bdb"/>
        <artifact name="jsimpledb-kv-cockroach" conf="kv-cockroach"/>
        <artifact name="jsimpledb-kv-fdb" conf="kv-fdb"/>
        <artifact name="jsimpledb-kv-leveldb" conf="kv-leveldb"/>
        <artifact name="jsimpledb-kv-mysql" conf="kv-mysql"/>
        <artifact name="jsimpledb-kv-raft" conf="kv-raft"/>
        <artifact name="jsimpledb-kv-rocksdb" conf="kv-rocksdb"/>
        <artifact name="jsimpledb-kv-simple" conf="kv-simple"/>
        <artifact name="jsimpledb-kv-sql" conf="kv-sql"/>
        <artifact name="jsimpledb-kv-sqlite" conf="kv-sqlite"/>
        <artifact name="jsimpledb-kv-test" conf="kv-test"/>
        <artifact name="jsimpledb-main" conf="main"/>
        <artifact name="jsimpledb-parse" conf="parse"/>
        <artifact name="jsimpledb-spring" conf="spring"/>
        <artifact name="jsimpledb-test" conf="test"/>
        <artifact name="jsimpledb-util" conf="util"/>
        <artifact name="jsimpledb-vaadin" conf="vaadin"/>

        <!-- Sources -->
        <artifact type="source" ext="zip" name="jsimpledb-ant" conf="ant"/>
        <artifact type="source" ext="zip" name="jsimpledb-app" conf="app"/>
        <artifact type="source" ext="zip" name="jsimpledb-cli" conf="cli"/>
        <artifact type="source" ext="zip" name="jsimpledb-cli-telnet" conf="cli-telnet"/>
        <artifact type="source" ext="zip" name="jsimpledb-cliapp" conf="cliapp"/>
        <artifact type="source" ext="zip" name="jsimpledb-coreapi" conf="coreapi"/>
        <artifact type="source" ext="zip" name="jsimpledb-demo" conf="demo"/>
        <artifact type="source" ext="zip" name="jsimpledb-guiapp" conf="guiapp"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv" conf="kv"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-array" conf="kv-array"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-bdb" conf="kv-bdb"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-cockroach" conf="kv-cockroach"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-fdb" conf="kv-fdb"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-leveldb" conf="kv-leveldb"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-mysql" conf="kv-mysql"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-raft" conf="kv-raft"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-rocksdb" conf="kv-rocksdb"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-simple" conf="kv-simple"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-sql" conf="kv-sql"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-sqlite" conf="kv-sqlite"/>
        <artifact type="source" ext="zip" name="jsimpledb-kv-test" conf="kv-test"/>
        <artifact type="source" ext="zip" name="jsimpledb-main" conf="main"/>
        <artifact type="source" ext="zip" name="jsimpledb-parse" conf="parse"/>
        <artifact type="source" ext="zip" name="jsimpledb-spring" conf="spring"/>
        <artifact type="source" ext="zip" name="jsimpledb-test" conf="test"/>
        <artifact type="source" ext="zip" name="jsimpledb-util" conf="util"/>
        <artifact type="source" ext="zip" name="jsimpledb-vaadin" conf="vaadin"/>

        <!-- Javadocs -->
        <artifact type="javadoc" ext="zip" name="jsimpledb-ant" conf="ant"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-app" conf="app"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-cli" conf="cli"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-cli-telnet" conf="cli-telnet"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-cliapp" conf="cliapp"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-coreapi" conf="coreapi"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-demo" conf="demo"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-guiapp" conf="guiapp"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv" conf="kv"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-array" conf="kv-array"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-bdb" conf="kv-bdb"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-cockroach" conf="kv-cockroach"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-fdb" conf="kv-fdb"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-leveldb" conf="kv-leveldb"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-mysql" conf="kv-mysql"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-raft" conf="kv-raft"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-rocksdb" conf="kv-rocksdb"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-simple" conf="kv-simple"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-sql" conf="kv-sql"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-sqlite" conf="kv-sqlite"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-kv-test" conf="kv-test"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-main" conf="main"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-parse" conf="parse"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-spring" conf="spring"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-test" conf="test"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-util" conf="util"/>
        <artifact type="javadoc" ext="zip" name="jsimpledb-vaadin" conf="vaadin"/>

    </publications>

    <dependencies>
        <dependency org="com.foundationdb" name="fdb-java" rev="3+" conf="kv-fdb->default"/>
        <dependency org="com.google.guava" name="guava" rev="18.0" conf="util->default"/>
        <dependency org="com.mysql" name="mysql-connector-java" rev="5.1+" conf="kv-mysql->default"/>
        <dependency org="com.sleepycat" name="berkeley-db-java" rev="6+" conf="kv-bdb->default"/>
        <dependency org="com.vaadin" name="vaadin" rev="7.5+" conf="demo->shared,server,themes,widgets; guiapp,vaadin->server,shared"/>
        <dependency org="javax.servlet" name="servletapi" rev="3.1.0" conf="demo,spring,vaadin->default"/>
        <dependency org="javax.validation" name="validation-api" rev="1.0.0.GA" conf="demo,guiapp,main,test->default"/>
        <dependency org="org.aspectj" name="aspectj" rev="1.8+" conf="guiapp->default"/>
        <dependency org="org.dellroad" name="dellroad-stuff" rev="2.0+" conf="util->main; demo,vaadin,guiapp->vaadin7; guiapp->spring"/>
        <dependency org="org.dellroad" name="leveldb" rev="0.8.1" conf="kv-leveldb->default"/>
        <dependency org="org.dellroad" name="nvt4j" rev="1.2+" conf="cli-telnet->default"/>
        <dependency org="org.eclipse" name="jetty" rev="9.2.7.v20150116" conf="guiapp->webapp,annotations"/>
        <dependency org="org.postgresql" name="postgresql-jdbc" rev="9.4+" conf="kv-cockroach->jdbc41"/>
        <dependency org="org.rocksdb" name="rocksdbjni" rev="4.5+" conf="kv-rocksdb->default"/>
        <dependency org="org.slf4j" name="slf4j" rev="1.7+" conf="util->core"/>
        <dependency org="org.sonatype.jline" name="jline" rev="2.14+" conf="app,cli->default"/>
        <dependency org="org.springframework" name="spring" rev="4.1+" conf="spring->context,core,tx,web; parse->core; guiapp->aspects; coreapi->tx; app->jdbc"/>
        <dependency org="org.xerial" name="sqlite-jdbc" rev="3.8+" conf="kv-sqlite->default"/>
    </dependencies>

</ivy-module>
