<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2015 Archie L. Cobbs

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->

<ivy-module>

    <info publication="20150629000000">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <description homepage="https://github.com/linkedin/PalDB">

            <p>
            PalDB is an embeddable write-once key-value store written in Java.
            </p>

            <p>
            PalDB is an embeddable persistent key-value store with very fast
            read performance and compact store size.  PalDB stores are single
            binary files written once and ready to be used in applications.
            </p>

            <p>
            PalDB's JAR is only 110K and has a single dependency (snappy, which
            isn't mandatory).  It's also very easy to use with just a few
            configuration parameters.
            </p>

            <p>
            Because PalDB is read-only and only focuses on data which can be
            held in memory it is significantly less complex than other
            embeddable key-value stores and therefore allows a compact storage
            format and very high throughput. PalDB is specifically optimized for
            fast read performance and compact store sizes. Performances can be
            compared to in-memory data structures such as Java collections (e.g.
            HashMap, HashSet) or other key-values stores (e.g. LevelDB,
            RocksDB).
            </p>

        </description>
    </info>

    <configurations>
        <conf name="core" description="Core classes"/>
        <conf name="snappy" description="Add snappy dependency"/>
        <conf name="default" extends="snappy" description="Core + Snappy"/>
    </configurations>

    <publications>
        <artifact conf="core"/>
        <artifact name="source" type="source" ext="zip"/>
    </publications>

    <dependencies>
        <dependency org="org.xerial.snappy" name="snappy-java" rev="1.1+" conf="snappy->default"/>
    </dependencies>

</ivy-module>
