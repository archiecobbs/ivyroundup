<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2009 Mark Thomas

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->

<ivy-module rev="$Id$">

    <info publication="20090723002100">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <description homepage="http://www.unitils.org/"><![CDATA[
        <p>Unitils is an open source library aimed at making unit testing easy
        and maintainable. Unitils builds further on existing libraries like
        dbunit and integrates with JUnit and TestNG.</p>
        
        <p>Unitils provides general asserion utilities, support for database
        testing, support for testing with mock objects and offers integration
        with Spring, Hibernate and the Java Persistence API (JPA). It has been
        designed to offer these services to unit tests in a very configurable
        and loosely coupled way. As a result, services can be added and
        extended very easily.</p>

        <p>Unitils offers following features:
            <ul>
                <li>General testing utilities
                    <ul>
                        <li>Equality assertion through reflection, with different
                            options like ignoring Java core/null values and
                            ignoring order of collections
                        </li>
                    </ul>
                </li>
                <li>Mock objects support
                    <ul>
                        <li>Dynamically define stub behavior of and verify
                            invocations on mock object using a simple syntax
                        </li>
                        <li>Optimal feedback including a simple and extended
                            execution scenario report and suggested assert
                            statements
                        </li>
                        <li>Use argument matchers for relaxing method parameter
                            constraints and mix them with concrete objects. Use
                            null when the actual argument value is not important
                        </li>
                        <li>Use dummy objects when stub data objects without any
                            required behavior are needed
                        </li>
                    </ul>
                </li>
                <li>Persistence layer testing support
                    <ul>
                        <li>Automatic maintenance of databases, with support for
                            incremental, repeatable and post processing scripts
                        </li>
                        <li>Automatically disable constraints and set sequences to
                            a minimum value
                            <ul>
                                <li>Support for Oracle, Hsqldb, MySql, DB2,
                                    Postgresql, MsSql and Derby
                                </li>
                        </li>
                        <li>Simplify test database connection setup</li>
                        <li>Simple insertion of test data with DBUnit
                            <ul>
                                <li>Run tests in a transaction</li>
                                <li>JPA entity manager creation and injection for
                                    hibernate, toplink and openjpa.
                                </li>
                            </ul>
                        </li>
                        <li>Hibernate SessionFactory creation and session
                            management
                        </li>
                        <li>Automatically test the mapping of JPA entities /
                            hibernate mapped objects with the database
                        </li>
                    </ul>
                </li>
                <li>EasyMock integration support
                    <ul>
                        <li>Simplify EasyMock mock object creation</li>
                        <li>Simplify mock object injection</li>
                        <li>EasyMock argument matching using reflection
                            equality
                        </li>
                    </ul>
                </li>
                <li>Spring integration
                    <ul>
                        <li>ApplicationContext configuration and easy injection
                            of spring managed beans into a unit test
                        </li>
                        <li>Support for using a Spring-configured Hibernate
                            SessionFactory in unit tests
                        </li>
                    </ul>
                </li>
            </ul>
        </p>
        ]]></description>
    </info>

    <configurations>
        <conf name="default" extends="spring-hibernate,dataset,mock" description="everything"/>
        <conf name="core" description="Unitils classes and required dependencies"/>
        <conf name="database" extends="core" description="Database support"/>
        <conf name="dataset" extends="database" description="Dataset support via DBUnit"/>
        <conf name="hibernate" extends="database" description="Hibernate support"/>
        <conf name="mock" extends="core" description="Mock object support"/>
        <conf name="spring" extends="core" description="Spring core support"/>
        <conf name="spring-hibernate" extends="spring,hibernate" description="Spring with Hibernate support"/>
        <conf name="spring-jdbc" extends="spring,database" description="Spring with JDBC support"/>
    </configurations>

    <publications>
        <artifact conf="core"/>
        <artifact name="source" type="source" ext="zip"/>
        <artifact name="javadoc" type="javadoc" ext="zip"/>
    </publications>

    <dependencies>
        <dependency org="org.apache.commons" name="commons-logging" rev="1.1+" conf="core->default"/>
        <dependency org="org.apache.commons" name="commons-lang" rev="[2.3,3.0[" conf="core->default"/>
        <dependency org="org.apache.commons" name="commons-collections" rev="[3.2,4.0[" conf="core->default"/>
        <dependency org="com.opensymphony" name="ognl" rev="[2.6.9,3.0[" conf="core->default"/>
        <dependency org="org.apache.commons" name="commons-dbcp" rev="[1.2.2,2.0[" conf="database->default"/>
        <dependency org="org.dbunit" name="dbunit" rev="[2.2.2,3.0[" conf="dataset->default"/>
        <dependency org="org.dbmaintain" name="dbmaintain" rev="1.+" conf="database->default"/>
        <dependency org="org.hibernate" name="hibernate" rev="[3.2,3.5.0-Final[" conf="hibernate->core"/>
        <dependency org="org.easymock" name="easymock" rev="[2.3,3.0[" conf="mock->ext"/>
        <dependency org="org.springframework" name="spring" rev="[2.0,3.0[" conf="spring->context;spring-hibernate->orm;spring-jdbc->jdbc"/>
    </dependencies>

</ivy-module>
