<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2008 Archie L. Cobbs.

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->

<ivy-module rev="$Id$">

    <info publication="20100209000000">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <description homepage="http://commons.apache.org/proper/commons-collections/">
            The Java Collections Framework was a major addition in JDK 1.2. It
            added many powerful data structures that accelerate development of
            most significant Java applications. Since that time it has become the
            recognised standard for collection handling in Java.

            Commons-Collections seek to build upon the JDK classes by providing
            new interfaces, implementations and utilities. There are many features,
            including:

            <ul>
            <li>Bag interface for collections that have a number of copies of each object</li>
            <li>Buffer interface for collections that have a well defined removal order, like FIFOs</li>
            <li>BidiMap interface for maps that can be looked up from value to key as well and key to value</li>
            <li>MapIterator interface to provide simple and quick iteration over maps</li>
            <li>Type checking decorators to ensure that only instances of a certain type can be added</li>
            <li>Transforming decorators that alter each object as it is added to the collection</li>
            <li>Composite collections that make multiple collections look like one</li>
            <li>Ordered maps and sets that retain the order elements are added in, including an LRU based map</li>
            <li>Identity map that compares objects based on their identity (==) instead of the equals method</li>
            <li>Reference map that allows keys and/or values to be garbage collected under close control</li>
            <li>Many comparator implementations</li>
            <li>Many iterator implementations</li>
            <li>Adapter classes from array and enumerations to collections</li>
            <li>Utilities to test or create typical set-theory properties of collections such as union,
              intersection, and closure</li>
            </ul>
        </description>
    </info>

    <publications>
        <artifact/>
        <artifact name="source" type="source" ext="zip"/>
    </publications>

</ivy-module>
