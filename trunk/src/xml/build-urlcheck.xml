<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2012 Martin Weber.

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->

<project name="check">
  <description>Checks for resources that no longer are available at the
    URLs specified in their packager.xml files.
  </description>

  <property name="report.dir" value="build/check-urls" />
  <property name="report.work.dir" value="build/check-urls/work" />
  <!-- Ant snippets for the generated build files live here -->
  <property name="verify.lib.dir" location="${basedir}/src/xml" />


  <!--
      Verify every artifact and homepage URL and print a report.

      This target remembers the modules successfully verified, subsequent invocations
      will skip these modules. Use target clean-check to restart from scratch.
  -->
  <target name="check-report"
          depends="-crawl"
          description="Verifies every artifact and homepage URL and print a report">

    <!-- analyze build output -->
    <fileset dir="${report.work.dir}"
             includes="REPORT-OK.*.txt"
             id="files.reported.OK" />
    <fileset dir="${report.work.dir}"
             includes="REPORT-problems.*.txt"
             id="files.reported.problems" />
    <fail message="No reports found in ${report.work.dir}">
      <condition>
        <resourcecount refid="files.reported.problems" when="eq" count="0" />
      </condition>
    </fail>
    <concat destfile="${report.dir}/REPORT-OK.txt">
      <header filtering="no" trimleading="yes">Modules/Revisions with no invalid URLs
          				       ======================================

      </header>
      <fileset refid="files.reported.OK" />
    </concat>
    <echo message="**********************************************" />
    <echo message="Wrote report ${report.dir}/REPORT-OK.txt" />

    <!-- generate general problems report -->
    <concat destfile="${report.dir}/REPORT-problems.txt">
      <header filtering="no" trimleading="yes">Modules/Revisions with problematic URLs
                                               =======================================

      </header>
      <fileset refid="files.reported.problems" />
    </concat>
    <echo message="Wrote report ${report.dir}/REPORT-problems.txt" />

    <!-- generate permanently moved problems report -->
    <!--
Sorry, disabled Don't know how to write a regex that matches a group of lines that
 do NOT include 'permanently moved'.
      <concat >
      <header filtering="no" trimleading="yes">Modules/Revisions with URLs permanently moved
                                               =============================================

      </header>
      <fileset refid="files.reported.problems" />
      <filterchain>
        <replaceregex pattern="(?!(^#(\w|[.\-])+?-(\w|[.\-])+?-.*:\n(\[.+?\n)*?(\[.+?permanently moved.+?\n)+(\[.+?\n)*))$"
                      replace=""
                      flags="gm"
                      byline="false" />
      </filterchain>
    </concat>
    <echo message="Wrote report ${report.dir}/REPORT-moved-permanently.txt" />
-->
  </target>

  <target name="clear-check" description="Restarts verification from scratch">

    <!-- Clear resolve work area and repository we're going to build -->
    <delete dir="${report.dir}" />
    <delete dir="${report.work.dir}" />
  </target>

  <!--
      Verify every artifact and homepage URL and generate a raw report.
  -->
  <target name="-crawl"
          depends="-init-check-crawler"
          unless="report-raw.uptodate"
          description="Verify every artifact and homepage URL and generate a raw report">
    <echo>Visiting all URLs...
      ... This may take up to 10 minutes to complete.
      NOTE: Subsequent invocations will skip URLs found to be valid.
    </echo>
    <!-- Run the crawler -->
    <ant dir="${report.work.dir}" antfile="build.xml" inheritAll="false">
      <propertyset>
        <propertyref prefix="crawler" />
      </propertyset>
    </ant>
  </target>

  <!-- Create an ant build that does the verification work -->
  <target name="-init-check-crawler"
          depends="-crawler.uptodate,_init-xalan"
          unless="crawler.uptodate"
          description="Create an ant build that does the verification work">
    <!-- Initialize  work area   -->
    <mkdir dir="${report.work.dir}" />

    <property name="batch.cnt" value="10" />
    <xslt classpathref="xalan.classpath"
          style="src/xsl/verify-url.xsl"
          in="${target.repo}/modules.xml"
          out="${report.work.dir}/build.xml"
      	  force="true">
      <param name="batchcnt" expression="${batch.cnt}" />
      <param name="libdir" expression="${verify.lib.dir}" />
    </xslt>
  </target>

  <target name="-crawler.uptodate">
    <uptodate property="crawler.uptodate" targetfile="${report.work.dir}/build.xml">
      <!-- TODO: this also depends on repo/modules.xml -->
      <srcfiles dir="src/modules">
        <include name="**/ivy.xml" />
        <include name="**/packager.xml" />
      </srcfiles>
    </uptodate>
  </target>

  <!-- Creates a script which fixes URLs that claim to be permanently moved
  	in ivy.xml and packager.xml
  -->
  <target name="prep-script" description="Creates script to fix URLs">
    <fileset dir="${report.work.dir}"
             includes="REPORT-problems.*.txt"
             id="files.reported.problems" />
    <!-- Pass 1: Ant header and edit target -->
    <concat destfile="${report.dir}/fix-permanently-moved.xml">
      <fileset refid="files.reported.problems" />
      <header filtering="no" trimleading="yes">
          &lt;project name="fix-perm-moved" basedir='.' default="apply-changes">
        &lt;!--
        Please carefully verify this generated script
        (which fixes URLs that claim to be permanently moved)
        before you run it!
	-->
          &lt;import file="${verify.lib.dir}/verify-url-lib.xml"/>
        &lt;!--
	  Edits the ivy.xml and packager.xml files
	-->
          &lt;target name="apply-changes" depends="test-changes">
        </header>

      <filterchain>
        <linecontains negate="true">
          <!-- Orcale tries to direct people to their landing pages, which is annoying.
          So keep the old URLs (which have more info) until someone fixes it manually.
           -->
          <contains value="http://www.oracle.com/technetwork/java/index.html" />
          <contains value="http://www.oracle.com/technetwork/indexes/downloads/index.html" />
        </linecontains>
        <replaceregex pattern="^\[(.+?) :\w+] ([^ ]+?) permanently moved to ([^ ]+?)$"
                      replace="&lt;replace value='\3' token='\2' file='src/modules/\1'/> "
                      flags="gm" />
        <linecontains>
          <!-- only keep the ant task -->
          <contains value="&lt;replace " />
        </linecontains>
      </filterchain>

      <footer filtering="no" trimleading="yes">
          &lt;/target>
        </footer>
    </concat>

    <!-- Pass 2: verify target and Ant footer -->
    <concat append="true" destfile="${report.dir}/fix-permanently-moved.xml">
      <fileset refid="files.reported.problems" />
      <header filtering="no" trimleading="yes">
        &lt;target name="test-changes">
        &lt;touch file="timestamp"/>
        </header>

      <filterchain>
        <linecontains negate="true">
          <!-- Orcale tries to direct people to their landing pages, which is annoying.
          So keep the old URLs (which have more info) until someone fixes it manually.
           -->
          <contains value="http://www.oracle.com/technetwork/java/index.html" />
          <contains value="http://www.oracle.com/technetwork/indexes/downloads/index.html" />
        </linecontains>
        <replaceregex pattern="^\[(.+?) :\w+] ([^ ]+?) permanently moved to ([^ ]+?)$"
                      replace="&lt;my-gete url='\3' file='\2' type='changeURL'/> "
                      flags="gm" />
        <linecontains>
          <!-- only keep the ant task -->
          <contains value="&lt;my-gete " />
        </linecontains>
      </filterchain>

      <footer filtering="no" trimleading="yes">
          &lt;/target>
          &lt;/project>
        </footer>
    </concat>

    <echo message="**********************************************" />
    <echo>
      Generated script ${report.dir}/fix-permanently-moved.xml

      Please carefully verify the generated script
      (which fixes URLs that claim to be permanently moved)
      before you run it!
   </echo>
    <echo message="**********************************************" />
  </target>

</project>
