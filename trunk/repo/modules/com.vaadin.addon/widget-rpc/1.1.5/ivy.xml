<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../xsl/ivy-doc.xsl"?>
<!--
    Copyright 2011 Mark Thomas

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->
<!-- GENERATED FILE - DO NOT EDIT -->
<ivy-module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:noNamespaceSchemaLocation="../../../../xsd/ivy.xsd">

    <info organisation="com.vaadin.addon" module="widget-rpc" revision="1.1.5" status="release" publication="20110219202600">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <ivyauthor xmlns:ivyde="http://ant.apache.org/ivy/ivyde/ns/" name="$Id: ivy.xml 2490 2012-12-25 16:38:33Z fifteenknots505@gmail.com $" url="http://code.google.com/p/ivyroundup/source/browse/trunk/src/modules/com.vaadin.addon/widget-rpc/1.1.5/"/>
        <repository xmlns:ivyde="http://ant.apache.org/ivy/ivyde/ns/" pattern="http://ivyroundup.googlecode.com/svn/trunk/repo/modules/[organisation]/[module]/[revision]/ivy.xml" ivys="true" url="http://ivyroundup.googlecode.com/" name="ivyroundup"/>
        <description homepage="http://vaadin.com/directory#addon/widget-rpc">
            <p>
                Traditionally Vaadin widgets use simple paint-change cycle to synchronize the client and server parts of a UI component.
            </p>
            <p>
                Widget RPC introduces a new way of communicating using method calls in more RPC-like manner and enables developers to build more fine-grained communication more easily.
            </p>
            <p>
                First, register a listeners:
            </p>
            <p>
                <code>
                    rpc.register("doStuffWithThings", new Method() {
                        void invoke(String methodName, Object[] params)
                            / do stuff with things
                        }
                    });
                </code>
            </p>
            <p>
                Then you can invoke methods like this:
            </p>
            <p>
                <code>rpc.call("doStuffWithThings", aThing, anotherThing);</code>
            </p>
            <p>
                This works both ways (client to server and server to client). See the highlights and documentation for details.
            </p>
        </description>
    </info>

    <publications>
        <artifact/>
    </publications>

</ivy-module>
