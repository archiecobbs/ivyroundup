<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../xsl/ivy-doc.xsl"?>
<!--
    Copyright 2009 Mark Thomas

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->
<!-- GENERATED FILE - DO NOT EDIT -->
<ivy-module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:noNamespaceSchemaLocation="../../../../xsd/ivy.xsd">

    <info organisation="org.apache.bsf" module="bsf" revision="2.4.0" status="release" publication="20061006105300">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <ivyauthor xmlns:ivyde="http://ant.apache.org/ivy/ivyde/ns/" name="$Id: ivy.xml 604 2009-03-23 19:29:24Z spatialguru.net $" url="http://code.google.com/p/ivyroundup/source/browse/trunk/src/modules/org.apache.bsf/bsf/2.4.0/"/>
        <repository xmlns:ivyde="http://ant.apache.org/ivy/ivyde/ns/" pattern="http://ivyroundup.googlecode.com/svn/trunk/repo/modules/[organisation]/[module]/[revision]/ivy.xml" ivys="true" url="http://ivyroundup.googlecode.com/" name="ivyroundup"/>
        <description homepage="http://jakarta.apache.org/bsf/">
        Bean Scripting Framework (BSF) is a set of Java classes which provides
        scripting language support within Java applications, and access to
        Java objects and methods from scripting languages. BSF allows one to
        write JSPs in languages other than Java while providing access to the
        Java class library. In addition, BSF permits any Java application to
        be implemented in part (or dynamically extended) by a language that is
        embedded within it. This is achieved by providing an API that permits
        calling scripting language engines from within Java, as well as an
        object registry that exposes Java objects to these scripting language
        engines. 
        </description>
    </info>

    <publications>
        <artifact xmlns:ivyde="http://ant.apache.org/ivy/ivyde/ns/" ivyde:source="source" ivyde:javadoc="javadoc"/>
        <artifact name="source" type="source" ext="zip"/>
        <artifact name="javadoc" type="javadoc" ext="zip"/>
    </publications>

</ivy-module>
