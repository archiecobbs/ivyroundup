<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../xsl/ivy-doc.xsl"?>

<!--
    Copyright 2008 Archie L. Cobbs.

    Licensed under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License. You may obtain
    a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations
    under the License.
-->
<!-- GENERATED FILE - DO NOT EDIT -->
<!-- Generated by $Id: ivy-repo.xsl 425 2009-01-13 18:18:19Z archie.cobbs $ -->
<ivy-module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.3" xsi:noNamespaceSchemaLocation="../../../../xsd/ivy.xsd">

    <info organisation="org.apache.commons" module="commons-beanutils" revision="1.8.0" status="release" publication="20080828120000">
        <license name="Apache License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <ivyauthor name="$Id: ivy.xml 366 2009-01-08 17:45:53Z archie.cobbs $" url="http://code.google.com/p/ivyroundup/source/browse/trunk/src/modules/org.apache.commons/commons-beanutils/1.8.0/"/>
        <repository pattern="http://ivyroundup.googlecode.com/svn/trunk/repo/modules/[organisation]/[module]/[revision]/ivy.xml" ivys="true" url="http://ivyroundup.googlecode.com/" name="ivyroundup"/>
        <description homepage="http://commons.apache.org/beanutils/">
            Most Java developers are used to creating Java classes
            that conform to the JavaBeans naming patterns for property
            getters and setters. It is natural to then access these
            methods directly, using calls to the corresponding getXxx
            and setXxx methods. However, there are some occasions where
            dynamic access to Java object properties (without compiled-in
            knowledge of the property getter and setter methods to be
            called) is needed. Example use cases include:

            <ul>
            <li>Building scripting languages that interact with the Java
                object model (such as the Bean Scripting Framework).</li>
            <li>Building template language processors for web presentation
                and similar uses (such as JSP or Velocity).</li>
            <li>Building custom tag libraries for JSP and XSP environments
                (such as Jakarta Taglibs, Struts, Cocoon).</li>
            <li>Consuming XML-based configuration resources (such as Ant
                build scripts, web application deployment descriptors,
                Tomcat's server.xml file).</li>
            </ul>

            The Java language provides Reflection and Introspection APIs
            (see the java.lang.reflect and java.beans packages in the
            JDK Javadocs). However, these APIs can be quite complex to
            understand and utilize. The BeanUtils component provides
            easy-to-use wrappers around these capabilities.
        </description>
    </info>

    <configurations>
        <conf name="core" description="BeanUtils minus Bean Collections classes"/>
        <conf name="complete" description="All of BeanUtils"/>
        <conf name="bean-collections" extends="core" description="BeanUtils with Bean Collections classes"/>
        <conf name="default" extends="core" description="Same as core configuration"/>
    </configurations>

    <publications>
        <artifact name="commons-beanutils" conf="complete"/>
        <artifact name="commons-beanutils-core" conf="core"/>
        <artifact name="commons-beanutils-bean-collections" conf="bean-collections"/>
        <artifact name="source" type="source" ext="zip"/>
        <artifact name="javadoc" type="javadoc" ext="zip"/>
    </publications>

    <dependencies>
        <dependency conf="core,complete-&gt;default" org="org.apache.commons" name="commons-logging" rev="[1.0,2.0["/>
        <dependency conf="complete,bean-collections-&gt;default" org="org.apache.commons" name="commons-collections" rev="3.+"/>
    </dependencies>

</ivy-module>
